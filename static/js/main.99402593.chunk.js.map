{"version":3,"sources":["landing/components/stepper.jsx","landing/styles/stepperStyles.js","landing/pages/firstLandingPage.jsx","landing/actions/landingActionTypes.js","landing/actions/landingActions.js","shared/enhancers/withConnectedReactRouter.js","landing/components/timer.jsx","landing/styles/timerStyles.js","landing/pages/landingPage.jsx","landing/styles/landingPageStyles.js","bootstrap/app.jsx","landing/index.js","landing/reducers/landingPageReducer.js","landing/reducers/index.js","bootstrap/reducers/appReducer.js","bootstrap/reducers/rootReducer.js","shared/objects/browserObjects.js","bootstrap/store.js","bootstrap/index.js","serviceWorker.js","index.js"],"names":["Stepper","_renderNextButton","_this$props","_this","props","handleNext","activeStep","steps","react_default","a","createElement","Button_default","size","onClick","disabled","KeyboardArrowRight_default","_this$props2","this","classes","MobileStepper_default","variant","position","className","root","nextButton","Component","enhancers","_","flowRight","withStyles","maxWidth","flexGrow","justifyContent","background","FirstLandingPage","stepper","landingActionTypes","LANDING_FETCH_LANDING_STATUS","LANDING_FETCH_LANDING_PAGE","LandingActionTypes","withConnectedReactRouter","connect","push","replace","go","goBack","goForward","Timer","state","count","counter","_hanleCount","handleDone","nextCount","setState","clearInterval","interval","setInterval","theme","border","textAlign","paddingLeft","paddingRight","margin","fontSize","color","palette","secondary","light","top","right","zIndex","LandingPage","_handleNext","isFirstLanding","fetchLandingStatus","fetchLandingPage","brand","src","timer","mapDispatchToProps","dispatch","Promise","resolve","store","get","then","value","type","left","bottom","maxHeight","app","Switch","Route","path","component","exact","combineReducers","landingPage","arguments","length","undefined","firstLandingPage","landing","history","createBrowserHistory","composeEnhancers","compose","createStore","connectRouter","rootReducer","applyMiddleware","routerMiddleware","ReduxThunk","bootstrap","es","lib","Boolean","window","location","hostname","match","ReactDOM","render","Bootstrap","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99402593.chunk.js","sourcesContent":["// @flow\n\nimport React, { Component } from 'react';\nimport _ from 'lodash';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nimport StepperStyles from '../styles/stepperStyles';\n\ntype Props = {\n  activeStep: number,\n  steps: number,\n  classes: *,\n  handleNext: () => void\n};\n\nclass Stepper extends Component<Props> {\n  _renderNextButton = () => {\n    const { handleNext, activeStep, steps } = this.props;\n\n    return (\n      <Button\n        size=\"small\"\n        onClick={handleNext}\n        disabled={activeStep === steps - 1}\n      >\n        <KeyboardArrowRight />\n      </Button>\n    );\n  };\n\n  render() {\n    const { classes, activeStep, steps } = this.props;\n\n    return (\n      <MobileStepper\n        variant=\"dots\"\n        steps={steps}\n        position=\"bottom\"\n        activeStep={activeStep}\n        className={classes.root}\n        nextButton={this._renderNextButton()}\n      />\n    );\n  }\n}\n\nconst enhancers = _.flowRight(withStyles(StepperStyles));\n\nexport default enhancers(Stepper);\n","export default {\n  root: {\n    maxWidth: 400,\n    flexGrow: 1,\n    justifyContent: 'center',\n    background: 'rgba(0, 0, 0, 0)'\n  }\n};\n","// @flow\n\nimport React, { Component } from 'react';\n\nimport Stepper from '../components/stepper';\n\ntype Props = {};\n\nclass FirstLandingPage extends Component<Props> {\n  render() {\n    return (\n      <div>\n        <Stepper />\n      </div>\n    );\n  }\n}\n\nexport default FirstLandingPage;\n","export default {\n  LANDING_FETCH_LANDING_STATUS: 'LANDING_FETCH_LANDING_STATUS',\n  LANDING_FETCH_LANDING_PAGE: 'LANDING_FETCH_LANDING_PAGE'\n};\n","// @flow\n\nimport store from 'store2';\nimport LandingActionTypes from './landingActionTypes';\n\nconst {\n  LANDING_FETCH_LANDING_STATUS,\n  LANDING_FETCH_LANDING_PAGE\n} = LandingActionTypes;\n\nexport const fetchLandingStatus = () => {\n  return (dispatch: *) => {\n    new Promise(resolve => resolve(store.get('LANDING_STATUS'))).then(value => {\n      dispatch({\n        type: LANDING_FETCH_LANDING_STATUS,\n        value\n      });\n    });\n  };\n};\n\nexport const fetchLandingPage = () => {\n  return {\n    type: LANDING_FETCH_LANDING_PAGE\n  };\n};\n","// @flow\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { push, replace, go, goBack, goForward } from 'connected-react-router';\n\nconst withConnectedReactRouter = (Component: *) => {\n  const WithConnectedReactRouter = (props: *) => <Component {...props} />;\n\n  return connect(\n    () => ({}),\n    { push, replace, go, goBack, goForward }\n  )(WithConnectedReactRouter);\n};\n\nexport default withConnectedReactRouter;\n","// @flow\n\nimport React, { Component } from 'react';\nimport _ from 'lodash';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TimerStyles from '../styles/timerStyles';\n\ntype Props = {\n  counter: number,\n  handleDone: () => void\n};\n\nclass Timer extends Component<Props> {\n  state = {\n    count: this.props.counter\n  };\n\n  _hanleCount = () => {\n    const { count } = this.state;\n    const { handleDone } = this.props;\n\n    const nextCount = count - 1;\n    this.setState({ count: nextCount });\n\n    if (nextCount === 0) {\n      handleDone && handleDone();\n      clearInterval(this.interval);\n    }\n  };\n\n  componentDidMount() {\n    this.interval = setInterval(this._hanleCount, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { count } = this.state;\n\n    return <div className={classes.count}>{count}</div>;\n  }\n}\n\nconst enhancers = _.flowRight(withStyles(TimerStyles));\n\nexport default enhancers(Timer);\n","export default theme => ({\n  count: {\n    border: 'dashed white',\n    position: 'fixed',\n    textAlign: 'right',\n    paddingLeft: '0.5rem',\n    paddingRight: '0.5rem',\n    margin: '1rem',\n    fontSize: '1.5rem',\n    color: theme.palette.secondary.light,\n    top: 0,\n    right: 0,\n    zIndex: 1\n  }\n});\n","// @flow\n\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\nimport * as LandingActions from '../actions/landingActions';\nimport LandingPageStyles from '../styles/landingPageStyles';\nimport withConnectedReactRouter from '../../shared/enhancers/withConnectedReactRouter';\nimport Timer from '../components/timer';\n\ntype Props = {\n  isFirstLanding: boolean,\n  counter: number,\n  brand: string,\n  classes: *\n};\n\nclass LandingPage extends Component<Props> {\n  componentDidMount() {\n    const {\n      isFirstLanding,\n      fetchLandingStatus,\n      fetchLandingPage,\n      push\n    } = this.props;\n\n    isFirstLanding ? push('/first/landing') : fetchLandingStatus();\n    fetchLandingPage && fetchLandingPage();\n  }\n\n  _handleNext = () => {\n    this.props.push('/home');\n  };\n\n  render() {\n    const { brand, classes, counter } = this.props;\n\n    return (\n      <div>\n        <img className={classes.brand} src={brand} />\n        <Timer handleDone={this._handleNext} counter={counter} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isFirstLanding: _.get(state, 'app.landing.isFirstLanding'),\n  counter: _.get(state, 'app.landing.landingPage.counter'),\n  brand: _.get(state, 'app.landing.landingPage.brand')\n});\n\nconst mapDispatchToProps = {\n  fetchLandingStatus: LandingActions.fetchLandingStatus,\n  fetchLandingPage: LandingActions.fetchLandingPage\n};\n\nconst enhancers = _.flowRight(\n  withStyles(LandingPageStyles),\n  withConnectedReactRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n);\n\nexport default enhancers(LandingPage);\n","export default {\n  brand: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Landing from '../landing';\n\nexport default (\n  <Switch>\n    <Route path=\"/\" component={Landing} />\n  </Switch>\n);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport FirstLandingPage from './pages/firstLandingPage';\nimport LandingPage from './pages/landingPage';\n\nexport default () => (\n  <Switch>\n    <Route exact path=\"/\" component={LandingPage} />\n    <Route path=\"/first/landing\" component={FirstLandingPage} />\n  </Switch>\n);\n","import LandingActionTypes from '../actions/landingActionTypes';\n\nconst { LANDING_FETCH_LANDING_PAGE } = LandingActionTypes;\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case LANDING_FETCH_LANDING_PAGE: {\n      return {\n        counter: 6,\n        brand:\n          'https://up.enterdesk.com/edpic/76/54/b2/7654b28b1df8bed811dba6e29f3b2840.jpg'\n      };\n    }\n    default: {\n      return {\n        counter: 6,\n        brand:\n          'https://up.enterdesk.com/edpic/76/54/b2/7654b28b1df8bed811dba6e29f3b2840.jpg'\n      };\n    }\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport landingPage from './landingPageReducer';\nimport firstLandingPage from './firstLandingPageReducer';\n\nexport default combineReducers({ landingPage, firstLandingPage });\n","import { combineReducers } from 'redux';\n\nimport landing from '../../landing/reducers';\n\nexport default combineReducers({ landing });\n","import { combineReducers } from 'redux';\n\nimport app from './appReducer';\n\nexport default combineReducers({ app });\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\n\nimport rootReducer from './reducers/rootReducer';\nimport { history } from '../shared/objects/browserObjects';\n\nconst reduxDevTools =\n  process.env.NODE_ENV !== 'production' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\nconst composeEnhancers = reduxDevTools || compose;\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  composeEnhancers(applyMiddleware(routerMiddleware(history), ReduxThunk))\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport app from './app';\nimport store from './store';\nimport { history } from '../shared/objects/browserObjects';\n\nexport default (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>{app}</ConnectedRouter>\n  </Provider>\n);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport Bootstrap from './bootstrap/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(Bootstrap, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}